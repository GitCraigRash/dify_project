Setps to complete to add AWS Quantum

1. Provider-Level Integration
You need to define a new Provider entry for AWS Quantum Computing, specifying:

provider: A unique identifier for AWS Quantum (e.g., aws_quantum).
label: Human-readable names in multiple languages (en_US, zh_Hans).
description: A detailed description of the provider's capabilities.
icon_small/icon_large: Path to visual assets for the provider.
supported_model_types: The type of models supported by AWS Quantum, such as a custom quantum type.
configurate_methods: The configuration methods for the provider (e.g., customizable-model or fetch-from-remote).
provider_credential_schema: The credentials needed for accessing AWS Quantum services (e.g., API keys, endpoints).

2. Model-Level Integration
Define the AIModelEntity for any models or services AWS Quantum Computing provides:

model: Unique identifiers for models (e.g., braket-sv1 or braket-tn1).
label: Human-readable names for each model.
model_type: Define if these models fall under a pre-existing type or require a new quantum type.
parameter_rules: Rules for model parameters like token limits or API-specific configurations.
pricing: Optional pricing details for the models.

3. Credentials and Configuration
Set up ProviderCredentialSchema and ModelCredentialSchema to handle user inputs:

Define the variables needed for credentials (access_key, secret_key, etc.).
Specify UI components for these inputs (e.g., text-input, secret-input).
Configure validation rules, default values, and dependencies between form fields.



Step 1: Provider-Level Integration 
aws_quantum.json file
{
    "provider": "aws_quantum",
    "label": {
        "en_US": "AWS Quantum Computing",
        "zh_Hans": "AWS量子计算"
    },
    "description": {
        "en_US": "Access quantum computing resources on AWS via Braket.",
        "zh_Hans": "通过Braket访问AWS上的量子计算资源。"
    },
    "supported_model_types": ["quantum"],
    "configurate_methods": ["customizable-model"],
    "provider_credential_schema": {
        "credential_form_schemas": [
            {
                "variable": "access_key",
                "label": {
                    "en_US": "Access Key",
                    "zh_Hans": "访问密钥"
                },
                "type": "text-input",
                "required": true
            },
            {
                "variable": "secret_key",
                "label": {
                    "en_US": "Secret Key",
                    "zh_Hans": "秘密密钥"
                },
                "type": "secret-input",
                "required": true
            }
        ]
    }
}


Step 2: Define Supported Models


{
    "model": "braket-sv1",
    "label": {
        "en_US": "AWS Braket State Vector Simulator"
    },
    "model_type": "quantum",
    "parameter_rules": [
        {
            "name": "shots",
            "type": "int",
            "default": 1000,
            "min": 1,
            "max": 10000,
            "label": {
                "en_US": "Number of Shots"
            }
        }
    ]
}
